@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    [Parameter]
    public EventCallback OnConfirm { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private void Close() => OnClose.InvokeAsync();
    private void Confirm() => OnConfirm.InvokeAsync();
    private void Cancel() => OnCancel.InvokeAsync();
}

@if (IsVisible)
{
    <div class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
        <div class="bg-white rounded-lg shadow-lg w-1/3">
            <div class="border-b px-4 py-2 flex justify-between items-center">
                <h5 class="font-bold">@Title</h5>
                <button type="button" class="text-black close" @onclick="Close">&times;</button>
            </div>
            <div class="p-4">
                @ChildContent
            </div>
            <div class="border-t px-4 py-2 flex justify-end gap-2">
                <button type="button" class="bg-red-300 text-white px-4 py-2 rounded" @onclick="Cancel">Cancel</button>
                <button type="button" class="bg-gray-500 text-white px-4 py-2 rounded" @onclick="Confirm">Confirm</button>
            </div>
        </div>
    </div>
}
