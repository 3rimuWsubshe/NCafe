name: Admin API

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/Admin/**'
      - '.github/workflows/admin-api.yml'
      - 'Directory.*.props'
  workflow_dispatch:

env:
  PROJECT_NAME: NCafe.Admin.Api
  REGISTRY: ghcr.io
  IMAGE_NAME: fredimachado/ncafe-admin-api
  MINVERTAGPREFIX: adm-

defaults:
  run:
    working-directory: src/Admin/NCafe.Admin.Api

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: "./global.json"

    - name: Install minver cli
      run: dotnet tool install --tool-path ./minver minver-cli --version 5.0.0

    - name: Calculate version
      run: |
        MINVERVERSION=$(./minver/minver -p alpha -t ${{ env.MINVERTAGPREFIX }})
        echo "VERSION=$MINVERVERSION" >> "$GITHUB_ENV"
        echo "MINVERVERSIONOVERRIDE=$MINVERVERSION" >> "$GITHUB_ENV"
        echo "VERSION: $MINVERVERSION"

    - name: Restore dependencies
      run: dotnet restore

    - name: Test
      id: test
      run: |
        echo "## Test results" >> $GITHUB_STEP_SUMMARY
        dotnet test ../**.Tests/**.csproj \
        --results-directory ${{github.workspace}}/TestResults --blame \
        --logger console --logger trx --logger html \
        --logger "GitHubActions;summary.includePassedTests=true;summary.includeSkippedTests=true" \
        -- RunConfiguration.CollectSourceInformation=true
    
    - name: Upload Test Results
      if: (success() || steps.test.conclusion == 'failure')
      uses: actions/upload-artifact@v4
      with:
        name: TestResults
        path: ${{github.workspace}}/TestResults

    - name: Build
      run: dotnet build -c Release --no-restore /p:CopyLocalLockFileAssemblies=true

    - name: Publish
      run: dotnet publish -c Release --no-restore --no-build -o ./output

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}},value=${{ env.VERSION }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: src/Admin/NCafe.Admin.Api
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Install Helm
      uses: azure/setup-helm@v4.2.0
      with:
        version: v3.11.1

    - name: Generate release artifacts
      run: |
        chmod +x $GITHUB_WORKSPACE/scripts/generate-artifacts
        $GITHUB_WORKSPACE/scripts/generate-artifacts -a appspec.yaml -i ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} -t ${{ steps.meta.outputs.version }} -r https://fredimachado.github.io/helm-charts

    - name: Archive release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts
        path: src/Admin/NCafe.Admin.Api/deploy/
  
  release-dev:
    needs: build
    uses: ./.github/workflows/deploy_template.yml
    with:
      environment: admin-dev
      namespace: dev
      project_folder: src/Admin/NCafe.Admin.Api
    secrets:
      CONNECTIONSTRINGS__EVENTSTORE: ${{ secrets.CONNECTIONSTRINGS__EVENTSTORE }}
      CONNECTIONSTRINGS__RABBITMQ: ${{ secrets.CONNECTIONSTRINGS__RABBITMQ }}
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
